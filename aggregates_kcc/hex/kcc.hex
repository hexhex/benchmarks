sign(X,C) v -assign(X,C) :- node(X), colour(C).
:- assign(X,C1), assign(X,C2), C1 != C2.
assigned(X) :- assign(X,C).
:- node(X), not assigned(X).

% guess clique
in(X) v out(X) :- node(X).

%in(X) :- node(X).
%out(X) :- node(X).

% each guess must satisfy one of the below conditions
:- not saturate.
in(X) :- node(X), saturate.
out(X) :- node(X), saturate.

% guessed set is not a clique
saturate :- in(X), in(Y), X != Y, not link(X,Y).

% there is a node X which is not in the clique but connected to all nodes in the clique (=> clique is not maximal)
saturate :- #sum{ m,Y,X : in(Y), X != Y, node(X); 1,s,X : node(X); 1,Y,X : link(X,Y), in(Y), node(X); 5,sat,X : node(X), saturate  } >= 1, out(X).

% clique uses two colours
saturate :- in(X), in(Y), assign(X,CX), assign(Y,CY), CX != CY.
link(X,Y) :- link(Y,X).

node(X) :- link(X,Y).
node(Y) :- link(X,Y).
